{
	"info": {
		"_postman_id": "45c80dc8-ff1b-4dca-a9dc-9568ced6374d",
		"name": "Candidate Management",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Register-User",
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"name\": \"Dinesh\",\n    \"surname\": \"H\",\n    \"phone\": \"8855555555\",\n    \"username\": \"dineshh\",\n    \"password\": \"password\",\n    \"email\": \"dinesh@email.com\",\n    \"gender\": \"MALE\"\n    \n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8080/auth/register",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"auth",
						"register"
					]
				}
			},
			"response": []
		},
		{
			"name": "Login-User (Generate JWT)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = JSON.parse(responseBody);",
							"postman.setEnvironmentVariable(\"jwt_token\", jsonData.accessToken);",
							"postman.setGlobalVariable(\"jwt_token\", jsonData.accessToken);",
							"console.log(\"setting jwt_token form accessToken\");"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"username\": \"dineshing\",\n    \"password\": \"password\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8080/auth/login",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"auth",
						"login"
					]
				}
			},
			"response": []
		},
		{
			"name": "GetlCandidateByUsername",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = JSON.parse(responseBody);",
							"postman.setEnvironmentVariable(\"candidate_id\", jsonData.candidate_id);",
							"postman.setGlobalVariable(\"candidate_id\", jsonData.candidate_id);",
							"postman.setGlobalVariable(\"username\", jsonData.username);",
							"console.log(\"setting candidate_id\");"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{jwt_token}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:8080/candidate/{{username}}",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"candidate",
						"{{username}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "UpdateCandidate",
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{jwt_token}}",
							"type": "string"
						}
					]
				},
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"name\": \"DineshUpdated\",\n    \"surname\": \"HingweUpdated\",\n    \"email\": \"dinesh@email.com\",\n    \"imageUrl\": \"www.gmail.com/myimageNew\",\n    \"address\": {\n        \"pin\": 123456,\n        \"city\": \"somecity\",\n        \"town\": \"mytown\",\n        \"addressline\": \"Flat 345, gallisome, AreaSome\"\n    },\n    \"bookmarkedCandidates\": [\n        \"34c31b6d-f317-4a28-9cd4-362efcb03deb\",\n        \"34c31b6d-f317-4a28-9cd4-362efcb03dec\"\n    ]\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8080/candidate/{{username}}",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"candidate",
						"{{username}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "AddBookmarksToCandidate",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:8080/candidate/{{candidate_id}}/bookmark/f6f490ee-ea89-4046-abc7-ecbfb2739bed",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"candidate",
						"{{candidate_id}}",
						"bookmark",
						"f6f490ee-ea89-4046-abc7-ecbfb2739bed"
					]
				}
			},
			"response": []
		},
		{
			"name": "DeleteCandidate",
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{jwt_token}}",
							"type": "string"
						}
					]
				},
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "http://localhost:8080/candidate/{{candidate_id}}",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"candidate",
						"{{candidate_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "AddProfessionForCandidate",
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"employer\": \"Wipro\",\n    \"designation\": \"java developer\",\n    \"periodFrom\": \"2012-07-09\",\n    \"periodTo\": \"2020-07-09\",\n    \"professionAddress\": {\n        \"pin\": 123458,\n        \"city\": \"someWiprocity\",\n        \"town\": \"Wiprotown\",\n        \"addressline\": \"Wipro ofc, SomeIT park\"\n    }\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8080/candidate/{{candidate_id}}/profession",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"candidate",
						"{{candidate_id}}",
						"profession"
					]
				}
			},
			"response": []
		},
		{
			"name": "GetProfessionByCandidateUUID",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"employer\": \"wiporo\",\n\t\"designation\": \"java developer\",\n\t\"periodFrom\": \"2020-07-09\",\n\t\"periodTo\": \"2021-07-09\",\n\t\"professionAddress\": {\n\t\t\"pin\": 123457,\n\t\t\"city\": \"somecity\",\n\t\t\"town\": \"mytown\",\n\t\t\"addressline\": \"Flat 345, gallisome\"\n\t}\n}\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8080/candidate/{{candidate_id}}/professions",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"candidate",
						"{{candidate_id}}",
						"professions"
					]
				}
			},
			"response": []
		},
		{
			"name": "DeleteProfessionById",
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{jwt_token}}",
							"type": "string"
						}
					]
				},
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "http://localhost:8080/candidate/{{candidate_id}}/profession/0d77e02b-c940-485b-84af-5087d5a7671c",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"candidate",
						"{{candidate_id}}",
						"profession",
						"0d77e02b-c940-485b-84af-5087d5a7671c"
					]
				}
			},
			"response": []
		},
		{
			"name": "AddTagToCandidate",
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{jwt_token}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"name\": \"MULESOFTT%%^\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8080/candidate/{{candidate_id}}/tag",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"candidate",
						"{{candidate_id}}",
						"tag"
					]
				}
			},
			"response": []
		},
		{
			"name": "GetTagsByCandidateUUID",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{jwt_token}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"name\": \"Software\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8080/candidate/{{candidate_id}}/tags",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"candidate",
						"{{candidate_id}}",
						"tags"
					]
				}
			},
			"response": []
		},
		{
			"name": "RemoveTagOfCandidatesByTagName",
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{jwt_token}}",
							"type": "string"
						}
					]
				},
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "http://localhost:8080/candidate/{{candidate_id}}/tag/1",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"candidate",
						"{{candidate_id}}",
						"tag",
						"1"
					]
				}
			},
			"response": []
		},
		{
			"name": "GetCandidatesByTagName",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{jwt_token}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"name\": \"Software\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8080/tag/3/candidates",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"tag",
						"3",
						"candidates"
					]
				}
			},
			"response": []
		}
	]
}